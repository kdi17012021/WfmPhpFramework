<?php

namespace wfm;

trait TSingleton
{
    private static ?self $instance = null;
    //паттерн синглтон чтобы можно было создать один экземпляр класса
    //?self - обнуляемый тип - может быть либо налом либо экземпляром класса 

    private function __construct(){}

    public static function getInstance(): static
    //возвращает тип статик - экземпляр класса
    {
        return static::$instance ?? static::$instance = new static();
        //если что то есть в инстанс то вернем его, если там нал то запишем в него результат выполнения new static

        //Называется null coalescing operator, или в переводе, оператор объединения с null.
        // Название это не очень точное, правильнее было бы назвать "оператор выбора из двух вариантов,
        // существующей переменной или дефолтного значения", но это было бы слишком длинно. В любом случае, это мудреное название означает,
        // что РНР выбирает из двух вариантов, "объединяет" их: если переменная есть,
        // то используется её значение, если переменной нет или она равна null - то используется значение,
        // указанное после ??.
    }



}